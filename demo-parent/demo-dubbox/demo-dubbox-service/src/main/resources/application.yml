server:
  port: 8082
  address: localhost
  context-path: /mybatis
  tomcat:
    uri-encoding: utf-8
#  context-parameters:
#    logback-config-location: http://172.16.225.98:8888/logback/framework/service
#    logback-expose-webapp-root: true
# datasource setting
spring:
  profiles:
    active: dev
  application:
    name: dubbox-test-service
  druid-datasource:
    master:
      url: jdbc:mysql://localhost:3306/qi_system?useUnicode=true&characterEncoding=utf-8
      username: root
      password: 123456
      driver-class-name: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始化大小
      initialSize: 5
      # 最小
      minIdle: 5
      # 最大
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
    slave:
      datasource1:
        url: jdbc:mysql://localhost:3306/qi_system?useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        # 初始化大小
        initialSize: 5
        # 最小
        minIdle: 5
        # 最大
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
      datasource2:
        url: jdbc:mysql://localhost:3306/qi_system?useUnicode=true&characterEncoding=utf-8
        username: root
        password: 123456
        driver-class-name: com.mysql.jdbc.Driver
        type: com.alibaba.druid.pool.DruidDataSource
        # 初始化大小
        initialSize: 5
        # 最小
        minIdle: 5
        # 最大
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
cache:
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务地址
    host: 172.16.225.98
    # Redis服务端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: redis123
    # 连接超时时间（毫秒）
    timeout: 1000
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 300
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 10000
      # 连接池中的最大空闲连接
      max-idle: 100
      # 连接池中的最小空闲连接
      min-idle: 50
#dubbo setting
dubbo:
  application:
    # 服务提供者名称信息
    name: dubbo_provider
    # 日志适配
    logger: slf4j
  registry:
    protocol: zookeeper
    # zookeeper注册中心服务地址
    address: 172.16.229.205:2181,172.16.229.205:2182,172.16.229.205:2183
    # 注册中心不存在时，是否报错
    check: true
    # 是否向此注册中心注册服务，如果设为false，将只订阅，不注册
    register: true
    # 是否向此注册中心订阅服务，如果设为false，将只注册，不订阅
    subscribe: false
    # 注册中心请求超时时间(毫秒)
    timeout: 2000
  protocol:
    config: Single
    single:
      name: dubbo
      port: 20080
  rpc:
    service-package: com.sfsctech.framework.rpc
#spring.cloud.config
#--spring.cloud.config.label=config
#--spring.cloud.config.name=jsp
#--spring.cloud.config.profile=deve
#--spring.cloud.config.uri=http://localhost:8888
logging:
  path: D:\opt\logs
  config: classpath:logback-custom.xml